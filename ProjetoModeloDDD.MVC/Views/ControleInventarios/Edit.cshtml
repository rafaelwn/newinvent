@model ProjetoModeloDDD.MVC.ViewModels.Inventario.ControleInventarioViewModel

@{
    ViewBag.Title = "Edit";
}

<script type="text/javascript">


    $(window).load(function () {
        $('#loading').hide();    
    });

    $(window).ready(function () {
        ConsultarStatus();        
    });

    function finalizarInventario() {

        var r = confirm("Deseja realmente finalizar o inventário?");
        if (r == true) {

            $('#loading').show();
            var url = '@Url.Action("Finalizar")';
            $.get(url, { id: $("#ControleInventarioId").val() }, function (result) {

                alert('Inventário Finalizado com Sucesso!');
                $('#btnEncerrar').attr('disabled', 'disabled');
                $('#loading').hide();
                var url = "/ControleInventarios/Index";
                window.location.assign(url);

            });
        }

    }

    function ConsultarStatus() {
        $('#loading').show();

        var url = '@Url.Action("ConsultarStatus")';
        $.get(url, { id: $("#ControleInventarioId").val() }, function (result) {
            
            if (result == 1) {
                $('#btnEncerrar').attr('disabled', 'disabled');
            }
            else {
                $('#btnEncerrar').attr('enabled', 'enabled');
            }  
           
            $('#loading').hide();

        });
    }

</script>

<h2>Editar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Controle Inventário</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ControleInventarioId)

        @Html.HiddenFor(model => model.DataInicio)
        @Html.HiddenFor(model => model.DataFim)
        @Html.HiddenFor(model => model.UsuarioEmail)


        <div class="form-group">
            @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DataInicio) 
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DataFim)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoLoja, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodigoLoja, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodigoLoja, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroLoja, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroLoja, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroLoja, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FaixaIdentificadorInicial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FaixaIdentificadorInicial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaixaIdentificadorInicial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FaixaIdentificadorFianl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FaixaIdentificadorFianl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaixaIdentificadorFianl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacoes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacoes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Gravar" class="btn btn-default" />
                <input type="button" value="Encerrar Inventário" id="btnEncerrar" name="btnEncerrar" class="btn btn-default" onclick="finalizarInventario()" />
            </div>
        </div>

        <br />
        
    </div>
}
<br/>

<h4>Itens Controle Inventário</h4>
<hr />

<div id="ciViewGrid">
    @Html.Partial("~/Views/ItensControleInventarios/Filter.cshtml", Model.ItensControleInventario)
</div>

@Html.ActionLink("Exportar Excel - Relatório Final", "../ItensControleInventarios/ExportRelatorioFinal", new { ControleInventarioId = Model.ControleInventarioId }, null)
<br /> 
@Html.ActionLink("Exportar TXT - Inventário", "../ItensControleInventarios/ExportResultadosTXT", new { ControleInventarioId = Model.ControleInventarioId }, null)
<br /> 
@Html.ActionLink("Exportar Excel - Produtividade", "../ItensControleInventarios/ExportRelatorioProdutividade", new { ControleInventarioId = Model.ControleInventarioId }, null)
<br /> <br />
<div>
    @Html.ActionLink("Voltar", "Index", null, new { @class = "voltar-image" })
</div>
